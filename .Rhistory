setwd("C:/Users/kevincre/Desktop/Projects/Data Science Certificate")
source.with.encoding('C:/Users/kevincre/Desktop/Projects/Data Science Certificate/Software/swirl_2.2.21/swirl/R/swirl', encoding='UTF-8')
cls
x >- 5
X <- 5
x
print(x)
x <- 5
x
x <- 1:20
x
test <- "Hello"
test
install.packages("C:/Users/kevincre/Desktop/Projects/Data Science Certificate/Software/swirl_2.2.21/swirl/INDEX", repos = NULL)
install.packages("swirl_2.2.21")
install.packages("swirl")
library(swirl)
search()
swirl
swirl()
find.packages("devtools")
install.packages("devtools")
find.packages("devtools")
find.package("devtoolds")
find.package("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
search()
library(swirl)
exit
quit
clear
clean
Clear
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3,14)
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555)
z <- c(z, 555, z)
c(z, 555, z)
z * 2 + 100
sqrt(z - 1)
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args()
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("myfile.R")
file.info("myfile.R")
file.info("mytest.R")
file.rename("mytest.R" "mytest2.R"")
file.rename("mytest.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.crate
?dir.create
dir.create(file.path("testdir2", "testdir3"),recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = true)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
Pi:10
pi:10
15:1
?`:`
seq(1,20)
seq(, 10, by=0.5)
seq(0,10,by=.0.5)
seq(0,10,by=0.5)
seq(0,10,length=30)
seq(5,10,length=30)
seq(5, 10,length=30)
my_seq <- seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
?seq()
seq_along(my_seq)
rep(0, times = 40)
rec(c(0,1,2), times = 10)))
rep(c(0,1,2),times = 10)
rep(c(0,1,2), each = 10)
0.5, 55, -10, 6
X <- 0.5, 55, -10, 6
numvect <- 0.5, 55, -10, 6
numvect <- 0.5:55: -10: 6
numvect <- C(0.5, 55, -10, 6)
?c
numvect <- C(0.5 55 -10 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_Char <- c(""My"", ""name"", ""is"")
My_Char <- ""My"", ""name"", ""is""
my_char <- C("My","name","is")
?character Strings
?character Vector
info()
nxt()
my_Char <- c("My","name","is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Kevin")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "y", "z"), sep " ")
paste(1,2,3, c("X", "y", "z"), sep " ")
paste(c(1,2,3), c("X","y","z"), sep = " ")
paste(1:3, c("X","Y","z"), sep = " ")
paste(1:3, c("X","Y","z"), sep = "")
paste(1:3, c("X","Y","z"), sep = "")
paste(1:3, c("x", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
mydata
my_data
0 / 0
inf - inf
Inf - Inf
save
exit
quit
esc
library(swirl)
swirl()
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical (my_matrixx, my_matrix2)
identical (my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rateing", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colmanes(my_data) <- cnames
colnames(my_data) <- cnames
my_data
true == true
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !==7
5 !== 7
! 5 ==  7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor( 5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which( ints > 7)
any ( ints =< 0)
any(ints <= 0)
any(ints < 0)
all(ints>0)
QUIT()
quit()
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
x(x)
x <- x(x)
?function
x
function x
nxt()
x() function
function x()
function (X) expr return (x)
function (X) return (X)
submit()
x <- function (x) return (X)
x
submit()
function (X) return
kevin
clear
nxt()
function(x)x
submit()
help
?help
help(functions, package = "swirl")
?function
function(X) return (X)
nxt()
quit()
makeVector <- function(x = numeric()) {}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list( set = set, pet = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cashed data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x <- 1:10
x
maveVector(x)
makeVector(x)
cachemean (x)
cachemean(x)
setwd("C:/Users/kevincre/ProgrammingAssignment2")
dir()
setwd("C:/Users/kevincre/ProgrammingAssignment2/ProgrammingAssignment2")
source(cachematrix.R)
dir()
SOURCE(cachematrix.R)
source(cachematrix.R)
